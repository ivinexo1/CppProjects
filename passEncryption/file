#include<iostream>#include<iomanip>classarray{public://voidcharInputintnumInput(int*beg,int*end){g=beg;std::cin>>std::setw(end-beg);for(;g<end;g++){std::cin>>*g;}return0;}voidcharInput(char*beg,char*end){std::cin>>std::setw(end-beg);for(char*i=beg;i<end;i++){std::cin>>*i;}return;}voidcharPrint(char*beg,char*end){for(char*i=beg;i<end;i++){std::cout<<*i;}std::cout<<std::endl;return;}voidnumPrint(int*beg,int*end){for(i=beg;i<end;i++){std::cout<<*i<<"";}std::cout<<std::endl;return;}voidnumSwap(int*a,int*b){val1=*a;val2=*b;*a=val2;*b=val1;return;}voidcharSwap(char*a,char*b){char1=*a;char2=*b;*a=char2;*b=char1;return;}voidcharEncrypt(char*beg,char*end,char*beg2,char*end2){char*passpoint=beg2;for(char*i=beg;i<end;i++){if(passpoint>=end2){passpoint=beg2;}*i=char(int(*i)+int(*passpoint));passpoint++;}return;}voidintDecrypt(int*beg,int*end,char*beg2,char*end2){char*passpoint=beg2;for(int*i=beg;i<end;i++){if(passpoint>=end2){passpoint=beg2;}*i=*i-int(*passpoint);passpoint++;}return;}voidintToChar(int*ibeg,int*iend,char*cbeg,char*cend){char*ci=cbeg;//std::cout<<iend-ibeg<<""<<cend-cbeg;for(int*i=ibeg;i<iend;i++){*ci=char(*i);ci++;}return;}private:charchar1,char2;/*unsignedchar*/intval1,val2;int*n,*g;int*i;};
